/* These are view particular utility functions */

import React from 'react'

export function getIcon(name) {
  const iconsPath = '../assets/icons/';
  switch (name) {
    case 'back':
      return (
        <svg fill="#333333" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44 44" xmlnsXlink="http://www.w3.org/1999/xlink" enableBackground="new 0 0 44 44">
          <path d="M22,0C9.8,0,0,9.8,0,22s9.8,22,22,22s22-9.8,22-22S34.2,0,22,0z M35,23c0,0.6-0.4,1-1,1H17.4c-0.4,0-0.7,0.5-0.4,0.9l4,4  c0.4,0.4,0.4,1,0,1.4l-1.4,1.4c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.5-0.1-0.7-0.3l-9-9C9.1,22.5,9,22.3,9,22s0.1-0.5,0.3-0.7l9-9  c0.2-0.2,0.4-0.3,0.7-0.3c0.3,0,0.5,0.1,0.7,0.3l1.4,1.4c0.4,0.4,0.4,1,0,1.4l-4,4C16.8,19.4,17,20,17.5,20H34c0.6,0,1,0.4,1,1V23z"/>
        </svg>
      )
    case 'kyc_confirmed':
      return (
        <img src={`${iconsPath}kyc_verified.png`} />
      )
    case 'delivery_verified':
      return (
        <img src={`${iconsPath}delivery_verified.png`} />
      )
    case 'confirmed':
      return (
        <img src={`${iconsPath}Confirmed.png`} />
      )
    case 'refresh':
      return (
        <svg style={{pointerEvents: 'none'}} fill="#9b9b9b" version="1.1" id="Capa_1"  x="0px" y="0px"
        width="50px" height="50px" viewBox="0 0 561 561">
        <g>
          <g id="loop">
            <path d="M280.5,76.5V0l-102,102l102,102v-76.5c84.15,0,153,68.85,153,153c0,25.5-7.65,51-17.85,71.4l38.25,38.25
              C471.75,357,484.5,321.3,484.5,280.5C484.5,168.3,392.7,76.5,280.5,76.5z M280.5,433.5c-84.15,0-153-68.85-153-153
              c0-25.5,7.65-51,17.85-71.4l-38.25-38.25C89.25,204,76.5,239.7,76.5,280.5c0,112.2,91.8,204,204,204V561l102-102l-102-102V433.5z"
              />
          </g>
        </g>
        </svg>
      )
    case 'cross':
      return (
        <svg width="14px" height="14px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
          viewBox="0 0 512 512">
        <g>
          <g>
            <path d="M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249
              C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306
              C514.019,27.23,514.019,14.135,505.943,6.058z"/>
          </g>
        </g>
        <g>
          <g>
            <path d="M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636
              c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z"/>
          </g>
        </g>
        </svg>
    )
    case 'plus':
      return (
        <svg width="16" height="16" version="1.1" id="Capa_1" x="0px" y="0px"
        	 viewBox="0 0 52 52">
        <g>
        	<path stroke="#21b121" d="M26,0C11.664,0,0,11.663,0,26s11.664,26,26,26s26-11.663,26-26S40.336,0,26,0z M26,50C12.767,50,2,39.233,2,26
        		S12.767,2,26,2s24,10.767,24,24S39.233,50,26,50z"/>
        	<path stroke="#21b121" d="M38.5,25H27V14c0-0.553-0.448-1-1-1s-1,0.447-1,1v11H13.5c-0.552,0-1,0.447-1,1s0.448,1,1,1H25v12c0,0.553,0.448,1,1,1
        		s1-0.447,1-1V27h11.5c0.552,0,1-0.447,1-1S39.052,25,38.5,25z"/>
        </g>
        </svg>
      )
     case 'minus':
        return (
          <svg width="16" height="16" version="1.1" id="Capa_1" x="0px" y="0px"
          	 viewBox="0 0 52 52">
          <g>
          	<path stroke="#ff3b34" d="M26,0C11.664,0,0,11.663,0,26s11.664,26,26,26s26-11.663,26-26S40.336,0,26,0z M26,50C12.767,50,2,39.233,2,26
          		S12.767,2,26,2s24,10.767,24,24S39.233,50,26,50z"/>
          	<path stroke="#ff3b34" d="M39,25H13c-0.552,0-1,0.447-1,1s0.448,1,1,1h26c0.552,0,1-0.447,1-1S39.552,25,39,25z"/>
          </g>
          </svg>
        )
    case 'notebook':
        return (
          <svg width="22px" height="22px" version="1.1" id="Capa_1"  x="0px" y="0px"
          	 viewBox="0 0 512 512">
          <g>
          	<g>
          		<path stroke="#9b9b9b" d="M321.895,216.398c-14.165-14.166-32.999-21.967-53.032-21.967s-38.867,7.801-53.033,21.967
          			c-14.166,14.166-21.967,33-21.967,53.033c0,20.033,7.801,38.867,21.967,53.032c14.166,14.166,33,21.968,53.033,21.968
          			s38.867-7.802,53.032-21.968c14.166-14.165,21.968-32.999,21.968-53.032S336.061,230.564,321.895,216.398z M300.682,301.251
          			c-8.499,8.499-19.8,13.181-31.819,13.181c-12.021,0-23.32-4.682-31.82-13.181c-8.499-8.499-13.18-19.8-13.18-31.819
          			c0-12.021,4.681-23.32,13.18-31.82c8.5-8.499,19.8-13.18,31.82-13.18c12.02,0,23.32,4.681,31.819,13.18
          			c8.499,8.5,13.181,19.8,13.181,31.82C313.863,281.451,309.181,292.752,300.682,301.251z"/>
          	</g>
          </g>
          <g>
          	<g>
          		<path stroke="#9b9b9b" d="M470.388,407.317l-61.957-61.957V0h-360v61h-20v30h20v30h-20v30h20v30h-20v30h20v30h-20v30h20v30h-20v30h20v30h-20v30h20
          			v30h-20v30h20v61h360v-39.445c8.281,7.486,18.894,11.583,30.137,11.583c12.021,0,23.321-4.681,31.82-13.181
          			c8.5-8.499,13.181-19.8,13.181-31.82C483.569,427.117,478.888,415.816,470.388,407.317z M148.431,30h230v179.167
          			c-5.627-10.196-12.718-19.662-21.181-28.125c-48.736-48.736-128.038-48.736-176.776,0c-15.815,15.815-26.492,34.85-32.043,55.013
          			V30z M363.863,269.432c0,25.375-9.882,49.231-27.825,67.175c-17.943,17.944-41.8,27.825-67.175,27.825
          			c-25.376,0-49.232-9.882-67.176-27.825c-37.04-37.04-37.04-97.31,0-134.351c18.522-18.522,42.845-27.78,67.176-27.78
          			c24.324,0,48.657,9.263,67.175,27.78C353.981,220.199,363.863,244.056,363.863,269.432z M118.431,482h-40v-31h20v-30h-20v-30h20
          			v-30h-20v-30h20v-30h-20v-30h20v-30h-20v-30h20v-30h-20v-30h20v-30h-20V91h20V61h-20V30h40V482z M378.432,482H148.431V302.807
          			c5.551,20.163,16.228,39.198,32.043,55.012c23.609,23.609,55,36.612,88.389,36.612c17.752,0,34.939-3.676,50.693-10.668
          			l58.876,58.876V482z M449.175,449.744c-5.848,5.848-15.362,5.849-21.214,0l-81.317-81.317l21.214-21.214l81.317,81.317
          			C455.024,434.379,455.024,443.896,449.175,449.744z"/>
          	</g>
          </g>
          </svg>

        )
    case 'dustbin':
        return (
          <svg version="1.1" id="Capa_1" x="0px" y="0px" width="16px" height="16px" viewBox="0 0 408.483 408.483">
          <g>
          	<g>
          		<path d="M87.748,388.784c0.461,11.01,9.521,19.699,20.539,19.699h191.911c11.018,0,20.078-8.689,20.539-19.699l13.705-289.316    H74.043L87.748,388.784z M247.655,171.329c0-4.61,3.738-8.349,8.35-8.349h13.355c4.609,0,8.35,3.738,8.35,8.349v165.293    c0,4.611-3.738,8.349-8.35,8.349h-13.355c-4.61,0-8.35-3.736-8.35-8.349V171.329z M189.216,171.329    c0-4.61,3.738-8.349,8.349-8.349h13.355c4.609,0,8.349,3.738,8.349,8.349v165.293c0,4.611-3.737,8.349-8.349,8.349h-13.355    c-4.61,0-8.349-3.736-8.349-8.349V171.329L189.216,171.329z M130.775,171.329c0-4.61,3.738-8.349,8.349-8.349h13.356    c4.61,0,8.349,3.738,8.349,8.349v165.293c0,4.611-3.738,8.349-8.349,8.349h-13.356c-4.61,0-8.349-3.736-8.349-8.349V171.329z" fill="#D80027"/>
          		<path d="M343.567,21.043h-88.535V4.305c0-2.377-1.927-4.305-4.305-4.305h-92.971c-2.377,0-4.304,1.928-4.304,4.305v16.737H64.916    c-7.125,0-12.9,5.776-12.9,12.901V74.47h304.451V33.944C356.467,26.819,350.692,21.043,343.567,21.043z" fill="#D80027"/>
          	</g>
          </g>
          </svg>
        )
    case 'down-arrow':
        return (
          <svg width="16px" height="16px" fill="#9b9b9b" version="1.1" viewBox="0 0 129 129">
            <g>
              <path d="m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z"/>
            </g>
          </svg>
        )
    default:

  }
}

export function getTimeDiff(d1, d2) {
  return Math.round(
    (d1 - new Date(d2)) / 60000
  )
}

export function validateNumType(keyCode) {
  let allowed = [ 8, 46, 37, 39, 9 ]
  return allowed.indexOf(keyCode) > -1 || (keyCode >=48 && keyCode <=57)
}

export function checkCtrlA(e) {
  if (e.ctrlKey) {
    if (e.keyCode == 65 || e.keyCode == 97) {
      return true
    }
  }
  return false
}

export function getHasuraRole() {
  return localStorage.getItem('x-hasura-role')
}

export function getHasuraId() {
  return localStorage.getItem('hasura-id')
}

export function canAccess(feature) {
  // console.log(feature)
  const hasuraRole = getHasuraRole()
  if (!hasuraRole) return;
  const accessObj = {
    "admin": [],
    "support_admin": [],
    "support_master": [],
    "support_person": [],
    "business_team": [],
    "delivery_support_person": ['resume-pause'],
    "support_team_leader": ['force-redeem', 'skip'],
    "excise_person": ['action-buttons', 'assign', 'consumer-col', 'resume-pause', 'other-orders', 'auto-pilot']
  }
  return !(accessObj[hasuraRole].indexOf(feature) > -1)
}
